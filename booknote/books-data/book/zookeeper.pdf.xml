<?xml version="1.0" encoding="UTF-8"?><xfdf xmlns="http://ns.adobe.com/xfdf/" xml:space="preserve"><fields/><annots><freetext TextColor="#000000" opacity="1" creationdate="D:20220214205040+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220214205054+08'00'" name="264db97d-d344-4c99-aaf4-bf2102ff8912" page="0" justification="left" rect="-113.444,377.992,69.14,517.056" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">在本文中，我们描述了</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，这是一种用于协调分布式应用程序进程的服务。由于</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">是关键基础设施的一部分，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">旨在提供一个简单且高性能的内核，用于在客户端构</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">建更复杂的协调原语。它将来自组消息传递、共享寄存器和分布式锁服务的元素合并到一个复制的集中式服务中。</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">公开的接口具有共享寄存器的免等待方面，具有类似于分布式文</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">件系统的缓存失效的事件驱动机制，以提供简单但功能强大的协调服务。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>在本文中，我们描述了 ZooKeeper，这是一种用于协调分布式应用程序进程的服务。由于 ZooKeeper 是关键基础设施的一部分，ZooKeeper 旨在提供一个简单且高性能的内核，用于在客户端构建更复杂的协调原语。它将来自组消息传递、共享寄存器和分布式锁服务的元素合并到一个复制的集中式服务中。 ZooKeeper 公开的接口具有共享寄存器的免等待方面，具有类似于分布式文件系统的缓存失效的事件驱动机制，以提供简单但功能强大的协调服务。</contents>
			<apref y="517.056" x="-113.444" gennum="0" objnum="275"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220214205346+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220214205357+08'00'" name="9d7ccee0-8641-464a-9c6a-e7bc47f57515" page="0" justification="left" rect="-112.944,267.44,68.14,370.988" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">接口支持高性能服务实现。除了无等待属性之外，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">还为每个客户端提供请求的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> FIFO </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">执行保证和所有更改</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">状态的请求的线性化。这些设计决策可以实现高性能</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">处理管道，本地服务器可以满足读取请求。我们展示了目标工作负载，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">2:1 </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">到</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> 100:1 </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的读写比率，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">每秒可以处理数万到数十万个事务。这种性能允许</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">被客户端应用程</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">序广泛使用。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>ZooKeeper 接口支持高性能服务实现。除了无等待属性之外，ZooKeeper 还为每个客户端提供请求的 FIFO 执行保证和所有更改 ZooKeeper 状态的请求的线性化。这些设计决策可以实现高性能处理管道，本地服务器可以满足读取请求。我们展示了目标工作负载，2:1 到 100:1 的读写比率，ZooKeeper 每秒可以处理数万到数十万个事务。这种性能允许 ZooKeeper 被客户端应用程序广泛使用。</contents>
			<apref y="370.988" x="-112.944" gennum="0" objnum="287"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220214205909+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220214210016+08'00'" name="5bffbffa-726b-4244-b149-2b65ec5fa7c5" page="0" justification="left" rect="-111.443,70.849,68.14,185.903" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">大规模分布式应用程序需要不同形式的协调。配置是最基本的协调形式之一。在最简单的形式中，配置只是系统进程的操作参数列表，而更复杂的系统具有动态配置参数。组成员身份和领导选</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">举在分布式系统中也很常见：通常进程需要知道哪些其他进程还活着，以及这些进程负责什么。锁构成了一个强大的协调原语，它实现了对关键资源的互斥访问。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>大规模分布式应用程序需要不同形式的协调。配置是最基本的协调形式之一。在最简单的形式中，配置只是系统进程的操作参数列表，而更复杂的系统具有动态配置参数。组成员身份和领导选举在分布式系统中也很常见：通常进程需要知道哪些其他进程还活着，以及这些进程负责什么。锁构成了一个强大的协调原语，它实现了对关键资源的互斥访问。</contents>
			<apref y="185.903" x="-111.443" gennum="0" objnum="298"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220214210214+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220214210319+08'00'" name="f091021e-a7c1-4572-97f8-4c6180b58c67" page="0" justification="left" rect="545.361,419.635,725.361,509.545" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">一种协调方法是为每种不同的协调需求开发</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">服务。例如，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">Amazon Simple Queue S</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ervice [3] </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">专门关注排队。其他服务已经</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">专门为领导人选举</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> [25] </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">和配置</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> [27] </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">而</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">开发。实现更强大原语的服务可用于实现</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">功能较弱的原语。例如，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">Chubby [6] </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">是</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">一种具有强同步保证的锁定服务。然后可</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">以使用锁来实现领导者选举、组成员资格</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">等。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>一种协调方法是为每种不同的协调需求开发服务。例如，Amazon Simple Queue Service [3] 专门关注排队。其他服务已经专门为领导人选举 [25] 和配置 [27] 而开发。实现更强大原语的服务可用于实现功能较弱的原语。例如，Chubby [6] 是一种具有强同步保证的锁定服务。然后可以使用锁来实现领导者选举、组成员资格等。</contents>
			<apref y="509.545" x="545.361" gennum="0" objnum="314"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220214211116+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220214211118+08'00'" name="c6638415-9607-4cf7-9d87-537dce304928" page="0" justification="left" rect="544.861,310.57,724.861,390.49" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">在设计协调服务时，我们不再在服务器端实</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">现特定的原语，而是选择公开一个</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">A</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">PI</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，使应用程序开发人员能够实现自己的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">原语。这样的选择导致了一个协调内核的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">实现，该内核支持新的原语，而无需更改</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">服务核心。这种方法支持多种形式的协调</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，以适应应用程序的需求，而不是将开发</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">人员限制在一组固定的原语中。</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> </span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>在设计协调服务时，我们不再在服务器端实现特定的原语，而是选择公开一个API，使应用程序开发人员能够实现自己的原语。这样的选择导致了一个协调内核的实现，该内核支持新的原语，而无需更改服务核心。这种方法支持多种形式的协调，以适应应用程序的需求，而不是将开发人员限制在一组固定的原语中。 </contents>
			<apref y="390.49" x="544.861" gennum="0" objnum="321"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220219191555+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220219191558+08'00'" name="870601fd-7d2e-4578-811d-da81738cf275" page="0" justification="left" rect="541.359,122.585,726.359,272.435" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">在设计</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> API </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">时，我们远离了</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">阻塞原语，例如锁。除其他问题外，阻塞</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">协调服务的原语可能会导致客户端缓慢或</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">故障，从而对更快客户端的性能产生负面</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">影响。如果处理请求依赖于其他客户端的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">响应和故障检测，则服务本身的实现会变</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">得更加复杂。因此，我们的系统</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> Z</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ookeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">实现了一个</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> API</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，该</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> API </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">可以像</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">在文件系统中一样操作分层组织的简单无</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">等待数据对象。实际上，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper API </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">类</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">似于任何其他文件系统之一，仅查看</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> A</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">PI </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">签名，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">似乎是</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> Chubby</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，没有</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">锁定方法、打开和关闭。然而，实现无等</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">待数据对象将</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">与基于阻塞原语</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">（如锁）的系统显着区别开来。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>在设计 ZooKeeper 的 API 时，我们远离了阻塞原语，例如锁。除其他问题外，阻塞协调服务的原语可能会导致客户端缓慢或故障，从而对更快客户端的性能产生负面影响。如果处理请求依赖于其他客户端的响应和故障检测，则服务本身的实现会变得更加复杂。因此，我们的系统 Zookeeper 实现了一个 API，该 API 可以像在文件系统中一样操作分层组织的简单无等待数据对象。实际上，ZooKeeper API 类似于任何其他文件系统之一，仅查看 API 签名，ZooKeeper 似乎是 Chubby，没有锁定方法、打开和关闭。然而，实现无等待数据对象将 ZooKeeper 与基于阻塞原语（如锁）的系统显着区别开来。</contents>
			<apref y="272.435" x="541.359" gennum="0" objnum="328"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220219194536+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220219194548+08'00'" name="b4e36f97-73ea-450a-83a7-ee1aa54c990a" page="1" justification="left" rect="-110.377,616.618,68.444,724.968" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">尽管无等待属性对性能和容错很重要，但它对协调来说是不够的。我们还必须为操作提供顺序保证。特别是，我们发现，保证所有操作的先进先出（</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">FIFO</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">）客户端顺序和可线性化的写入可以有</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">效地实现服务，这足以实现我们应用所关心的协调原语。事实上，我们可以用我们的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">API</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">为任何数量的进程实现共识，根据</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">Herlihy</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的层次结构，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">实现了一个通用对象</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">[14]</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>尽管无等待属性对性能和容错很重要，但它对协调来说是不够的。我们还必须为操作提供顺序保证。特别是，我们发现，保证所有操作的先进先出（FIFO）客户端顺序和可线性化的写入可以有效地实现服务，这足以实现我们应用所关心的协调原语。事实上，我们可以用我们的API为任何数量的进程实现共识，根据Herlihy的层次结构，ZooKeeper实现了一个通用对象[14]。</contents>
			<apref y="724.968" x="-110.377" gennum="0" objnum="335"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220093528+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220093605+08'00'" name="fccdbe88-69d6-45a9-90c4-7c15360aebad" page="1" justification="left" rect="-111.943,411.007,66.639,592.591" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">服务由一组使用复制来实现高可用性和性能的服务器组成。它的高性能使包含大量进程的应用程序能够使用这种协调内核来管理协调的各个方面。我们能够使用简单的流水线架构来</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">实现</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，它允许我们处理成百上千个未完成的请求，同时仍然实现低延迟。这样的管道自然能够以</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> FIFO </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">顺序从单个客户端执行操作。保证</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> FIFO </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">客户端顺序使客户端能够异步提交</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">操作。使用异步操作，客户端一次可以有多个未完成的操作。这个特性是可取的，例如，当一个新的客户端成为领导者并且它必须操作元数据并相应地更新它时。在没有多个未完成操作的可</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">能性的情况下，初始化时间可以是秒级而不是亚秒级。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>ZooKeeper 服务由一组使用复制来实现高可用性和性能的服务器组成。它的高性能使包含大量进程的应用程序能够使用这种协调内核来管理协调的各个方面。我们能够使用简单的流水线架构来实现 ZooKeeper，它允许我们处理成百上千个未完成的请求，同时仍然实现低延迟。这样的管道自然能够以 FIFO 顺序从单个客户端执行操作。保证 FIFO 客户端顺序使客户端能够异步提交操作。使用异步操作，客户端一次可以有多个未完成的操作。这个特性是可取的，例如，当一个新的客户端成为领导者并且它必须操作元数据并相应地更新它时。在没有多个未完成操作的可能性的情况下，初始化时间可以是秒级而不是亚秒级。</contents>
			<apref y="592.591" x="-111.943" gennum="0" objnum="342"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220094734+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220094741+08'00'" name="7eb4e5bf-50e1-4c48-9523-d972e562f35c" page="1" justification="left" rect="-111.443,287.45,68.64,367.487" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">为了保证更新操作满足线性化，我们实现了一个基于领导者的原子广播协议</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> [23]</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，称为</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> Zab [24]</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">。然而，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">应用程序的典型工作负载以读取操作为主，因此需要扩展读取吞吐量。在</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">中，服务器在本地处理读取操作，我们不使用</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> Zab </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">对它们进行完全排序。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>为了保证更新操作满足线性化，我们实现了一个基于领导者的原子广播协议 [23]，称为 Zab [24]。然而，ZooKeeper 应用程序的典型工作负载以读取操作为主，因此需要扩展读取吞吐量。在 ZooKeeper 中，服务器在本地处理读取操作，我们不使用 Zab 对它们进行完全排序。</contents>
			<apref y="367.487" x="-111.443" gennum="0" objnum="353"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220095009+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220095018+08'00'" name="ac38b482-01ab-43a9-a08e-d10a20ecd99c" page="1" justification="left" rect="-112.444,110.368,69.14,286.449" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">在客户端缓存数据是提高读取性能的一项重要技术。例如，对于进程来说，缓存当前领导者的标识符是很有用的，而不是每次需要知道领导者时都去探查</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">。</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">使用监视机制</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">使客户端能够缓存数据，而无需直接管理客户端缓存。使用这种机制，客户端可以监视给定数据对象的更新，并在更新时接收通知。</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> Chubby </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">直接管理客户端缓存。它阻止更新以使缓存正在</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">更改的数据的所有客户端的缓存无效。在这种设计下，如果这些客户端中的任何一个运行缓慢或出现故障，更新就会延迟。</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> Chubby </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">使用租约来防止有故障的客户端无限期地阻塞系统。然而</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，租约只限制了缓慢或故障客户端的影响，而</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">监视则完全避免了这个问题。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>在客户端缓存数据是提高读取性能的一项重要技术。例如，对于进程来说，缓存当前领导者的标识符是很有用的，而不是每次需要知道领导者时都去探查 ZooKeeper。 ZooKeeper 使用监视机制使客户端能够缓存数据，而无需直接管理客户端缓存。使用这种机制，客户端可以监视给定数据对象的更新，并在更新时接收通知。 Chubby 直接管理客户端缓存。它阻止更新以使缓存正在更改的数据的所有客户端的缓存无效。在这种设计下，如果这些客户端中的任何一个运行缓慢或出现故障，更新就会延迟。 Chubby 使用租约来防止有故障的客户端无限期地阻塞系统。然而，租约只限制了缓慢或故障客户端的影响，而 ZooKeeper 监视则完全避免了这个问题。</contents>
			<apref y="286.449" x="-112.444" gennum="0" objnum="360"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220095118+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220095123+08'00'" name="2281bd4f-f56a-4017-bfb9-066aa4d80c71" page="1" justification="left" rect="540.359,660.122,725.444,720.15" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">在本文中，我们讨论了</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的设计和</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">实现。使用</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，我们能够实现应</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">用程序所需的所有协调原语，即使只有写</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">入是可线性化的。为了验证我们的方法</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，我们展示了如何使用</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">实现一</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">些协调原语。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>在本文中，我们讨论了 ZooKeeper 的设计和实现。使用 ZooKeeper，我们能够实现应用程序所需的所有协调原语，即使只有写入是可线性化的。为了验证我们的方法，我们展示了如何使用 ZooKeeper 实现一些协调原语。</contents>
			<apref y="720.15" x="540.359" gennum="0" objnum="367"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220095212+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220095241+08'00'" name="171f6324-4392-480e-a159-97e23e5f20e5" page="1" justification="left" rect="541.359,521.241,726.359,651.111" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">总而言之，在本文中，我们的主要贡献是</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">：</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> 
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">协调内核：我们提出了一种在分布式系统中</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">使用的具有宽松一致性保证的无等待协调</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">服务。特别是，我们描述了协调内核的设</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">计和实现，我们在许多关键应用程序中使</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">用它来实现各种协调技术。
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">协调配方：我们展示了如何使用</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> Z</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">来构建更高级别的协调原语，甚</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">至是阻塞和强一致的原语，这些原语经常</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">用于分布式应用程序中。
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">协调经验：我们分享了一些使用</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> Z</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">并评估其性能的方式。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>总而言之，在本文中，我们的主要贡献是： 
协调内核：我们提出了一种在分布式系统中使用的具有宽松一致性保证的无等待协调服务。特别是，我们描述了协调内核的设计和实现，我们在许多关键应用程序中使用它来实现各种协调技术。
协调配方：我们展示了如何使用 ZooKeeper 来构建更高级别的协调原语，甚至是阻塞和强一致的原语，这些原语经常用于分布式应用程序中。
协调经验：我们分享了一些使用 ZooKeeper 并评估其性能的方式。</contents>
			<apref y="651.111" x="541.359" gennum="0" objnum="376"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220095930+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220095931+08'00'" name="1f06349d-8aed-4ae4-88ac-e862e90dcded" page="1" justification="left" rect="541.86,352.59,726.86,432.51" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">客户端使用</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">客户端库通过客户端</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> API </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">向</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">提交请求。除了通过</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">客户端</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> API </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">公开</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">服务接口外</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，客户端库还管理客户端和</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">服</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">务器之间的网络连接。在本节中，我们首</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">先提供</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">服务的高级视图。然后</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">我们讨论客户端用来与</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">交互的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> API</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>客户端使用 ZooKeeper 客户端库通过客户端 API 向 ZooKeeper 提交请求。除了通过客户端 API 公开 ZooKeeper 服务接口外，客户端库还管理客户端和 ZooKeeper 服务器之间的网络连接。在本节中，我们首先提供 ZooKeeper 服务的高级视图。然后我们讨论客户端用来与 ZooKeeper 交互的 API。</contents>
			<apref y="432.51" x="541.86" gennum="0" objnum="383"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220100649+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220100651+08'00'" name="a10f6fab-d64d-4bf5-bc62-7bfe2eb2426e" page="1" justification="left" rect="542.86,234.049,722.86,323.959" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">术语。在本文中，我们用</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">client</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">表示</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">Z</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">服务的用户，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">server</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">表示提供</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">Z</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">服务的进程，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">表示</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">Z</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">数据中的内存数据节点，它被组</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">织在一个层次化的命名空间中，称为作为</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">数据树。我们还使用术语更新和写入来指</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">代任何修改数据树状态的操作。客户端在</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">连接到</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">并获取会话句柄时建</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">立会话，通过该句柄发出请求。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>术语。在本文中，我们用client表示ZooKeeper服务的用户，server表示提供ZooKeeper服务的进程，znode表示ZooKeeper数据中的内存数据节点，它被组织在一个层次化的命名空间中，称为作为数据树。我们还使用术语更新和写入来指代任何修改数据树状态的操作。客户端在连接到 ZooKeeper 并获取会话句柄时建立会话，通过该句柄发出请求。</contents>
			<apref y="323.959" x="542.86" gennum="0" objnum="390"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220100818+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220100821+08'00'" name="357591ba-c60d-4788-ae9a-e9299861ba57" page="1" justification="left" rect="543.36,82.465,723.36,162.385" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">向其客户端提供一组数据节点</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> (</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode) </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的抽象，这些节点根据分层名称空</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">间进行组织。此层次结构中的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">是</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">客户端通过</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper API </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">操作的数据</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">对象。分层名称空间通常用于文件系统</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">。这是一种组织数据对象的理想方式，因</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">为用户已经习惯了这种抽象，并且它可以</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">更好地组织应用程序元数据。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>ZooKeeper 向其客户端提供一组数据节点 (znode) 的抽象，这些节点根据分层名称空间进行组织。此层次结构中的 znode 是客户端通过 ZooKeeper API 操作的数据对象。分层名称空间通常用于文件系统。这是一种组织数据对象的理想方式，因为用户已经习惯了这种抽象，并且它可以更好地组织应用程序元数据。</contents>
			<apref y="162.385" x="543.36" gennum="0" objnum="397"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220101154+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220101210+08'00'" name="79e16188-3423-4426-b043-a123fdd1d0f5" page="2" justification="left" rect="-111.443,654.12,68.14,723.151" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">给定</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，我们使用标准的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> UNIX </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">符号表示文件系统路径。例如，我们使用</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> /A/B/C </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">来表示</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode C </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的路径，其中</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> C </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">以</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> B </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">作为其父节点，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">B </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">以</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> A </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">作为其父节点。所有</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">都存储数据</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，并且除了临时</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">之外的所有</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">都可以有子节点。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>给定 znode，我们使用标准的 UNIX 符号表示文件系统路径。例如，我们使用 /A/B/C 来表示 znode C 的路径，其中 C 以 B 作为其父节点，B 以 A 作为其父节点。所有 znode 都存储数据，并且除了临时 znode 之外的所有 znode 都可以有子节点。</contents>
			<apref y="723.151" x="-111.443" gennum="0" objnum="404"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220101422+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220101432+08'00'" name="2a01a65c-acae-4e86-837f-03a6a944925f" page="2" justification="left" rect="-110.443,413.008,67.64,479.038" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">客户端可以创建两种类型的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">：</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">常规：客户端通过显式创建和删除常规</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">来操作它们；短暂的：客户端创建这样的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，他们要么显式删除它们，要么让系统在创建它们的会话终</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">止时自动删除它们（故意或由于失败）。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>客户端可以创建两种类型的 znode： 常规：客户端通过显式创建和删除常规 znode 来操作它们；短暂的：客户端创建这样的 znode，他们要么显式删除它们，要么让系统在创建它们的会话终止时自动删除它们（故意或由于失败）。</contents>
			<apref y="479.038" x="-110.443" gennum="0" objnum="420"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220101711+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220101726+08'00'" name="75ff9d03-fcd8-4788-b986-b24f9eb13d3b" page="2" justification="left" rect="-113.444,329.969,68.64,395.5" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">此外，在创建新的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">时，客户机可以设置顺序标志。使用顺序标志集创建的节点的名称后面附加了一个单调递增的计数器值。如果</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">n</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">是新的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">p</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">是父</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，那么</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">n</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的序列值永远不会小于</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">在</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">p</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">下创建的任何其他序列</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的名称中的值。</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> </span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>此外，在创建新的znode时，客户机可以设置顺序标志。使用顺序标志集创建的节点的名称后面附加了一个单调递增的计数器值。如果n是新的znode，p是父znode，那么n的序列值永远不会小于在p下创建的任何其他序列znode的名称中的值。 </contents>
			<apref y="395.5" x="-113.444" gennum="0" objnum="429"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220102126+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220102140+08'00'" name="f404b732-7cfb-49f7-a38b-0d0785ca543b" page="2" justification="left" rect="-111.443,161.892,66.139,313.962" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">实现了监视功能，允许客户端在不需要轮询的情况下及时接收更改通知。当客户机发出设置了监视标志的读取操作时，该操作将正常完成，但服务器承诺在返回的信息发生更改时通知</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">客户机。监视是与会话相关联的一次性触发器；一旦触发或会话关闭，它们将被注销。监视表明发生了变化，但不提供变化。例如，如果客户机在</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">“/foo”</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">更改两次之前发出</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">getData</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">（</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">“/foo”</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">true</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">），则客户机将收到一个监视事件，告诉客户机</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">“/foo”</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的数据已更改。会话事件（如连接丢失事件）也会被发送到监视回调，以便客户端知道监视事件可能会延迟。</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> </span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>ZooKeeper实现了监视功能，允许客户端在不需要轮询的情况下及时接收更改通知。当客户机发出设置了监视标志的读取操作时，该操作将正常完成，但服务器承诺在返回的信息发生更改时通知客户机。监视是与会话相关联的一次性触发器；一旦触发或会话关闭，它们将被注销。监视表明发生了变化，但不提供变化。例如，如果客户机在“/foo”更改两次之前发出getData（“/foo”，true），则客户机将收到一个监视事件，告诉客户机“/foo”的数据已更改。会话事件（如连接丢失事件）也会被发送到监视回调，以便客户端知道监视事件可能会延迟。 </contents>
			<apref y="313.962" x="-111.443" gennum="0" objnum="445"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220102245+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220102257+08'00'" name="02b87036-4b4c-41ca-9982-db89bc44eccf" page="2" justification="left" rect="-110.943,59.344,68.64,103.365" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">数据模型。</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的数据模型本质上是一个带有简化</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">API</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的文件系统，只有完整的数据读写，或者是一个带有层次结构的键</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">/</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">值表</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">- </span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>数据模型。ZooKeeper的数据模型本质上是一个带有简化API的文件系统，只有完整的数据读写，或者是一个带有层次结构的键/值表- </contents>
			<apref y="103.365" x="-110.943" gennum="0" objnum="452"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220102329+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220102330+08'00'" name="a286eca9-e914-4e08-8286-c87711065ab0" page="2" justification="left" rect="542.36,667.692,722.36,717.642" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">分层名称空间对于为不同应用程序的名称空</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">间分配子树以及设置对这些子树的访问权</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">限非常有用。我们还利用客户端目录的概</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">念来构建更高级别的原语，如第</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">2.4</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">节所</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">示。</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> </span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>分层名称空间对于为不同应用程序的名称空间分配子树以及设置对这些子树的访问权限非常有用。我们还利用客户端目录的概念来构建更高级别的原语，如第2.4节所示。 </contents>
			<apref y="717.642" x="542.36" gennum="0" objnum="461"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220102520+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220102522+08'00'" name="ff377243-af90-45aa-8b45-374a7841c6f9" page="2" justification="left" rect="541.359,558.214,726.359,658.114" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">与文件系统中的文件不同，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">不是为通用</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">数据存储而设计的。相反，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">映射到客</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">户机应用程序的抽象，通常对应于用于协</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">调目的的元数据。为了说明这一点，在图</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">1</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">中我们有两个子树，一个用于应用程序</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">1</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> (/app1)</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，另一个用于应用程序</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">2 (</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">/app2)</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">。应用程序</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">1</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的子树实现了一个简单</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的组成员协议</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">:</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">每个客户端进程</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">pi</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">在</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">/app1</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">下创建一个</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode pi</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，只要进程在运</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">行，这个</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode pi</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">就会持续存在。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>与文件系统中的文件不同，znode不是为通用数据存储而设计的。相反，znode映射到客户机应用程序的抽象，通常对应于用于协调目的的元数据。为了说明这一点，在图1中我们有两个子树，一个用于应用程序1 (/app1)，另一个用于应用程序2 (/app2)。应用程序1的子树实现了一个简单的组成员协议:每个客户端进程pi在/app1下创建一个znode pi，只要进程在运行，这个znode pi就会持续存在。</contents>
			<apref y="658.114" x="541.359" gennum="0" objnum="468"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220102929+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220102931+08'00'" name="eac9b696-46c9-4d8a-aac2-d417597bdef7" page="2" justification="left" rect="542.36,419.679,722.36,539.559" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">虽然</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">并不是为通用数据存储而设计的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，但</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">确实允许客户端存储一些</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">信息，这些信息可以用于元数据或分布式</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">计算中的配置。例如，在基于</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">leader</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的应</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">用程序中，对于刚刚开始了解其他服务器</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">当前是</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">leader</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的应用服务器来说，这是很</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">有用的。为了实现这一目标，我们可以让</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">当前</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">leader</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">将此信息写入</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">空间中的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">一个已知位置。</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">还将元数据与时间</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">戳和版本计数器相关联，这允许客户端跟</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">踪对</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的更改，并根据</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的版本执</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">行有条件的更新。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>虽然znode并不是为通用数据存储而设计的，但ZooKeeper确实允许客户端存储一些信息，这些信息可以用于元数据或分布式计算中的配置。例如，在基于leader的应用程序中，对于刚刚开始了解其他服务器当前是leader的应用服务器来说，这是很有用的。为了实现这一目标，我们可以让当前leader将此信息写入znode空间中的一个已知位置。znode还将元数据与时间戳和版本计数器相关联，这允许客户端跟踪对znode的更改，并根据znode的版本执行有条件的更新。</contents>
			<apref y="539.559" x="542.36" gennum="0" objnum="475"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220103118+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220103139+08'00'" name="688a3469-6526-467c-ac5a-f21c93f79490" page="2" justification="left" rect="542.36,268.094,722.36,377.984" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">客户端连接到</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">并发起会话。会话</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">有一个相关的超时。如果超过这个超时时</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">间，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">没有从它的会话中收到任</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">何消息，则认为客户端故障。当客户端显</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">式关闭会话句柄或</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">检测到客户</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">端故障时，会话结束。在会话中，客户机</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">观察反映其操作执行情况的一系列状态更</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">改。会话使客户端能够在</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">集合</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">中透明地从一台服务器移动到另一台服务</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">器，从而在</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">服务器之间保持一</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">致。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>客户端连接到ZooKeeper并发起会话。会话有一个相关的超时。如果超过这个超时时间，ZooKeeper没有从它的会话中收到任何消息，则认为客户端故障。当客户端显式关闭会话句柄或ZooKeeper检测到客户端故障时，会话结束。在会话中，客户机观察反映其操作执行情况的一系列状态更改。会话使客户端能够在ZooKeeper集合中透明地从一台服务器移动到另一台服务器，从而在ZooKeeper服务器之间保持一致。</contents>
			<apref y="377.984" x="542.36" gennum="0" objnum="482"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220103928+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220103945+08'00'" name="2c8785a1-624b-49d1-8e3c-39a368978973" page="2" justification="left" rect="545.361,122.998,725.361,212.908" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">我们在下面展示</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper API</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的相关子集</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，并讨论每个请求的语义。
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">create</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">（</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">path</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">data</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">flags</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">）：创建一个</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">路径名为</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">path</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，在其中存储数据</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">[]</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，并返回新</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的名称。</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">flags</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">允许客</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">户端选择</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的类型：常规、临时，并</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">设置顺序标志；
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">delete</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">（</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">path</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">version</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">）：如果</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">为预</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">期版本，则删除</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">路径；</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> </span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>我们在下面展示ZooKeeper API的相关子集，并讨论每个请求的语义。
create（path，data，flags）：创建一个路径名为path的znode，在其中存储数据[]，并返回新znode的名称。flags允许客户端选择znode的类型：常规、临时，并设置顺序标志；
delete（path，version）：如果znode为预期版本，则删除znode路径； </contents>
			<apref y="212.908" x="545.361" gennum="0" objnum="489"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220104030+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220104031+08'00'" name="1049f5d7-cfa7-4f66-861e-8e9ce0e2993a" page="2" justification="left" rect="543.36,62.397,723.36,102.357" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">exists(path, watch)</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">：如果路径名为</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> p</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ath </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">存在，则返回</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> true</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，否则</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">返回</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> false</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">。</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> watch </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">标志使客户端能够</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">在</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">上设置监视；</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>exists(path, watch)：如果路径名为 path 的 znode 存在，则返回 true，否则返回 false。 watch 标志使客户端能够在 znode 上设置监视；</contents>
			<apref y="102.357" x="543.36" gennum="0" objnum="493"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220104131+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220104145+08'00'" name="111e4688-ff7d-4a14-b6a9-ad902a539cac" page="3" justification="left" rect="-111.443,651.118,71.141,708.645" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">getData</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">（</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">path</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">watch</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">）：返回与</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">关联的数据和元数据，如版本信息。</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">watch</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">标志的工作方式与</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">exists</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">（）的工作方式相同，只是</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">在</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">不存在时不设置</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">watch</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">；</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>getData（path，watch）：返回与znode关联的数据和元数据，如版本信息。watch标志的工作方式与exists（）的工作方式相同，只是ZooKeeper在znode不存在时不设置watch；</contents>
			<apref y="708.645" x="-111.443" gennum="0" objnum="500"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220104213+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220104220+08'00'" name="2e5a1bdb-3775-466a-b05e-8f8a559b2d72" page="3" justification="left" rect="-112.444,600.595,65.139,638.112" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">setData</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">（路径、数据、版本）：如果版本号是</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的当前版本，则将数据</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">[]</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">写入</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">路径；</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>setData（路径、数据、版本）：如果版本号是znode的当前版本，则将数据[]写入znode路径；</contents>
			<apref y="638.112" x="-112.444" gennum="0" objnum="506"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220104311+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220104325+08'00'" name="d45cb330-dcb7-4f8e-9c22-f96e8fbf3420" page="3" justification="left" rect="-111.943,576.584,69.641,600.095" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">getChildren(path, watch):</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">返回一个</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的子节点的名称集合</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">;</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>getChildren(path, watch):返回一个znode的子节点的名称集合;</contents>
			<apref y="600.095" x="-111.943" gennum="0" objnum="510"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220220104458+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220220104506+08'00'" name="7043da1f-3c20-4ef3-87e6-e9dd9c317818" page="3" justification="left" rect="-112.444,541.067,69.641,573.582" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">;sync(path):</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">在操作开始时等待所有更新，并将其传播到客户端连接的服务器。该路径当前被忽略</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>;sync(path):在操作开始时等待所有更新，并将其传播到客户端连接的服务器。该路径当前被忽略</contents>
			<apref y="573.582" x="-112.444" gennum="0" objnum="518"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220226104743+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220226104903+08'00'" name="b43426dd-0677-4f19-a734-cd065ec678fb" page="3" justification="left" rect="-112.543,284.029,67.605,507.37" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">所有方法都通过</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> API </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">提供同步和异步版本。当应用程序需要执行单个</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">操作并且没有并发任务要执行时，应用程序会使用同步</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> API</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，因此它会进行必要的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">调用和阻塞。然</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">而，异步</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> API </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">使应用程序能够同时执行多个未完成的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">操作和其他并行执行的任务。</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">客户端保证每个操作的相应回调按顺序调用。
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">请注意，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">不使用句柄来访问</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">。相反，每个请求都包含正在操作的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的完整路径。这种选择不仅简化了</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> API</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">（没有</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> open() </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">或</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> close() </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">方法），而且还消除了服务器需要</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">维护的额外状态。
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">每个更新方法都有一个预期的版本号，它可以实现条件更新。如果</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的实际版本号与预期的版本号不匹配，则更新将失败并出现意外的版本错误。如果版本号为</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">-1</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，则不进行版本检查。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>所有方法都通过 API 提供同步和异步版本。当应用程序需要执行单个 ZooKeeper 操作并且没有并发任务要执行时，应用程序会使用同步 API，因此它会进行必要的 ZooKeeper 调用和阻塞。然而，异步 API 使应用程序能够同时执行多个未完成的 ZooKeeper 操作和其他并行执行的任务。 ZooKeeper 客户端保证每个操作的相应回调按顺序调用。

请注意，ZooKeeper 不使用句柄来访问 znode。相反，每个请求都包含正在操作的 znode 的完整路径。这种选择不仅简化了 API（没有 open() 或 close() 方法），而且还消除了服务器需要维护的额外状态。

每个更新方法都有一个预期的版本号，它可以实现条件更新。如果 znode 的实际版本号与预期的版本号不匹配，则更新将失败并出现意外的版本错误。如果版本号为-1，则不进行版本检查。</contents>
			<apref y="507.37" x="-112.543" gennum="0" objnum="525"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220226104929+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220226105002+08'00'" name="81e6ae23-6059-4a0d-b6d1-e408e0537940" page="3" justification="left" rect="-114.945,144.141,67.605,221.59" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">有两个基本的顺序保证：</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> 
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">线性化写入：所有更新</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">状态的请求都是可序列化的并且尊重优先级；</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> FIFO </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">客户端顺序：来自给定客户端的所有请求都按照客户端发送的顺序执行。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>ZooKeeper 有两个基本的顺序保证： 
线性化写入：所有更新 ZooKeeper 状态的请求都是可序列化的并且尊重优先级； FIFO 客户端顺序：来自给定客户端的所有请求都按照客户端发送的顺序执行。</contents>
			<apref y="221.59" x="-114.945" gennum="0" objnum="541"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220226105359+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220226105405+08'00'" name="73bf564b-e31c-444c-8199-2b4aa9b40df1" page="3" justification="left" rect="-111.943,71.495,68.806,136.936" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">请注意，我们对线性化的定义与</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> Herlihy [15] </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">最初提出的定义不同，我们称之为</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> A-linearizability</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">（异步线性化）。在</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> Herlihy </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">对线性化的原始定义中，客户端一次只能有一个未完成的操</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">作（客户端是一个线程）。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>请注意，我们对线性化的定义与 Herlihy [15] 最初提出的定义不同，我们称之为 A-linearizability（异步线性化）。在 Herlihy 对线性化的原始定义中，客户端一次只能有一个未完成的操作（客户端是一个线程）。</contents>
			<apref y="136.936" x="-111.943" gennum="0" objnum="550"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220226105647+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220226105650+08'00'" name="0cbc57d3-aff8-4fb2-ad51-50ee1baf60fa" page="3" justification="left" rect="545.797,603.633,725.797,714.693" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">在我们的方案中，我们允许一个客户端有多</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">个未完成的操作，因此我们可以选择保证</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">同一客户端的未完成操作没有特定顺序或</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">保证</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> FIFO </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">顺序。我们选择后者作为我们</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的财产。重要的是要观察到适用于可线性</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">化对象的所有结果也适用于可线性化对象</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，因为满足</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> A-</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">线性化的系统也满足线性</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">化。因为只有更新请求是可线性</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:Arial">​​</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">化的，</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">Z</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">ooKeeper </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">在每个副本本地处理读取请求</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">。这允许服务随着服务器添加到系统而线</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">性扩展。</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>在我们的方案中，我们允许一个客户端有多个未完成的操作，因此我们可以选择保证同一客户端的未完成操作没有特定顺序或保证 FIFO 顺序。我们选择后者作为我们的财产。重要的是要观察到适用于可线性化对象的所有结果也适用于可线性化对象，因为满足 A-线性化的系统也满足线性化。因为只有更新请求是可线性​​化的，ZooKeeper 在每个副本本地处理读取请求。这允许服务随着服务器添加到系统而线性扩展。</contents>
			<apref y="714.693" x="545.797" gennum="0" objnum="557"/>
		</freetext><freetext TextColor="#000000" opacity="1" creationdate="D:20220226105743+08'00'" flags="print" IT="FreeTextTypewriter" date="D:20220226110104+08'00'" name="37f7397b-cac8-4b60-bec5-0a74e2f9007c" page="3" justification="left" rect="541.393,112.287,726.393,581.817" rotation="0" subject="打字机" title="cc">
			<defaultstyle>font: SimSun 10pt;color: #000000</defaultstyle>
			<contents-richtext><body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/" xfa:APIVersion="Acrobat:11.0.0" xfa:spec="2.0.2"><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">要了解这两个保证如何相互作用，请考虑以</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">下场景。一个由多个进程组成的系统会选</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">举一个领导者来指挥工作进程。当一个新</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的领导者接管系统时，它必须更改大量的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">配置参数，并在完成后通知其他进程。然</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">后我们有两个重要的要求：</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> 
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">• </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">当新领导开始进行更改时，我们不希望其</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">他进程开始使用正在更改的配置；</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> 
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">• </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">如果新领导者在配置完全更新之前死亡</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，我们不希望进程使用这个部分配置。
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">请注意，分布式锁（例如</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> Chubby </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">提供的锁</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">）有助于满足第一个需求，但不足以满足</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">第二个需求。使用</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> ZooKeeper</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，新的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> l</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">eader </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">可以指定一条路径作为准备好的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> z</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">node</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">；其他进程将仅在该</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">存在时使</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">用该配置。新领导者通过删除就绪、更新</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">各种配置</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">和创建就绪来进行配置更</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">改。所有这些更改都可以流水线化并异步</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">发布，以快速更新配置状态。尽管更改操</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">作的延迟大约为</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> 2 </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">毫秒，但如果请求一个</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">接一个地发出，则必须更新</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> 5000 </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">个不同</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的新领导者将需要</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> 10 </span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">秒；通过异</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">步发出请求，请求将花费不到一秒钟的时</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">间。由于排序保证，如果一个进程看到准</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">备好的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体"> znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，它也必须看到新领导者所</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">做的所有配置更改。如果新的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">leader</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">在准</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">备好的</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">znode</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">创建之前就死掉了，其他进程</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">就知道配置还没有最终确定，不会使用它</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">。
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">
</span></p><p dir="ltr"><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">上述方案还有一个问题：如果一个进程在新</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">的领导者开始进行更改之前看到准备就绪</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，然后在更改进行时开始读取配置，会发</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">生什么情况。这个问题是通过通知的顺序</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">保证来解决的：如果客户端正在监视更改</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">，客户端将在更改后看到系统的新状态之</span><span style="text-align:left;font-size:10pt;font-style:normal;font-weight:normal;color:#000000;font-family:宋体">前看到通知事件</span></p></body></contents-richtext>
			<defaultappearance> /#CB#CE#CC#E5 10 Tf</defaultappearance>
			<contents>要了解这两个保证如何相互作用，请考虑以下场景。一个由多个进程组成的系统会选举一个领导者来指挥工作进程。当一个新的领导者接管系统时，它必须更改大量的配置参数，并在完成后通知其他进程。然后我们有两个重要的要求： 

• 当新领导开始进行更改时，我们不希望其他进程开始使用正在更改的配置； 



• 如果新领导者在配置完全更新之前死亡，我们不希望进程使用这个部分配置。





请注意，分布式锁（例如 Chubby 提供的锁）有助于满足第一个需求，但不足以满足第二个需求。使用 ZooKeeper，新的 leader 可以指定一条路径作为准备好的 znode；其他进程将仅在该 znode 存在时使用该配置。新领导者通过删除就绪、更新各种配置 znode 和创建就绪来进行配置更改。所有这些更改都可以流水线化并异步发布，以快速更新配置状态。尽管更改操作的延迟大约为 2 毫秒，但如果请求一个接一个地发出，则必须更新 5000 个不同 znode 的新领导者将需要 10 秒；通过异步发出请求，请求将花费不到一秒钟的时间。由于排序保证，如果一个进程看到准备好的 znode，它也必须看到新领导者所做的所有配置更改。如果新的leader在准备好的znode创建之前就死掉了，其他进程就知道配置还没有最终确定，不会使用它。


上述方案还有一个问题：如果一个进程在新的领导者开始进行更改之前看到准备就绪，然后在更改进行时开始读取配置，会发生什么情况。这个问题是通过通知的顺序保证来解决的：如果客户端正在监视更改，客户端将在更改后看到系统的新状态之前看到通知事件</contents>
			<apref y="581.817" x="541.393" gennum="0" objnum="570"/>
		</freetext></annots><pages><defmtx matrix="1,0,0,-1,114.94500000000001,991.2760000000001"/></pages></xfdf>